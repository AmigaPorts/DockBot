.key HELP/S,CLEAN/S,CLEANOBJ/S,CPU/K,NOEXE/S,NOLIB/S,NOCLASSES/S,NOPREFS/S,DEBUGMEM/S,DEBUG/S,STRIP/S,OPT/S,DIR/K

IF <HELP$NOHELP> EQ HELP
  ECHO "Options: "
  ECHO "  HELP/S       Show this help message."
  ECHO "  CLEAN/S      Remove object files and binaries."
  ECHO "  CLEANOBJ/S   Remove object files."
  ECHO "  CPU/K        Sets the CPU to target. Defaults to CPU of this machine."
  ECHO "  NOEXE/S      Do not compile the DockBot executable."
  ECHO "  NOLIB/S      Do not compile dockbot.library."
  ECHO "  NOCLASSES/S  Do not compile loadable gadget modules."
  ECHO "  NOPREFS/S    Do not compile the preferences application."
  ECHO "  DEBUGMEM/S   Output memory debugging information."
  ECHO "  DEBUG/S      Compile with debug symbols."
  ECHO "  STRIP/S      Strip all debug information."
  ECHO "  OPT/S        Optimize output."
  ECHO "  DIR/K        Set the output directory. Defaults to /bin/<CPU>."
  ECHO
  QUIT
ENDIF

ECHO Checking Requirements

ECHO NOLINE "  SAS/C: "
IF NOT EXISTS sc:c/sc
  ECHO Not Found
  QUIT
ENDIF
VERSION sc:c/sc 6 58 >NIL:
IF WARN
  ECHO Need version 6.58
  QUIT
ENDIF
ECHO OK

ECHO " "

; Decide on a CPU to compile for.
CPU CHECK 68040 >NIL:
IF WARN 
  CPU CHECK 68030 >NIL:
  IF WARN
    CPU CHECK 68020 >NIL:
    IF WARN
      SET defcpu 68000
    ELSE
      SET defcpu 68020
    ENDIF
  ELSE
    SET defcpu 68030
  ENDIF
ELSE
  SET defcpu 68040
ENDIF

.def CPU $defcpu

ECHO Compiling for <CPU>
ECHO " "

IF <DEBUGMEM$NODEBUGMEM> EQ DEBUGMEM
  ECHO Enabling Memory Debug Output
  ECHO " "
  SET DEFDEBUGMEM "define=DEBUG_MEM"
ELSE
  SET DEFDEBUGMEM "define=NO_DEBUG_MEM"
ENDIF

IF <DEBUG$NODEBUG> EQ DEBUG
  ECHO Compiling With Debug Symbols
  ECHO " "
  SET DEFDEBUG "debug=full"
ELSE
  SET DEFDEBUG "nodebug"
ENDIF

IF <STRIP$NOSTRIP> EQ STRIP
  ECHO Removing all Debug information
  ECHO " "
  SET DEFSTRIP "StripDebug"
ELSE
  SET DEFSTRIP ""
ENDIF

IF <OPT$NOOPT> EQ OPT
  ECHO "Optimizing"
  ECHO " "
  SET DEFOPT "opt"
ELSE
  SET DEFOPT ""
ENDIF

.def DIR /bin/<CPU>

ECHO "Output to <DIR>"
ECHO " "

IF NOT EXISTS <DIR>
  MAKEDIR <DIR>
ENDIF

IF <NOLIB$LIB> EQ LIB
  ECHO Compiling dockbot.library
  ECHO " "
  cd LibDockBot
  smake <CLEAN> <CLEANOBJ> DIR=<DIR> CPU=<CPU> DEF_DEBUG=$DEFDEBUG DEF_STRIP=$DEFSTRIP DEF_OPT=$DEFOPT
  cd /
ENDIF

IF <NOEXE$EXE> EQ EXE
  echo Compiling DockBot
  echo " "
  cd DockBot
  smake <CLEAN> <CLEANOBJ> DIR=<DIR> CPU=<CPU> DEF_DEBUG_MEM=$DEFDEBUGMEM DEF_DEBUG=$DEFDEBUG DEF_STRIP=$DEFSTRIP DEF_OPT=$DEFOPT
  cd /
ENDIF

IF <NOPREFS$PREFS> EQ PREFS
  echo Compiling DockBotPrefs
  echo " "
  cd DockBotPrefs
  smake <CLEAN> <CLEANOBJ> DIR=<DIR> CPU=<CPU> DEF_DEBUG=$DEFDEBUG DEF_STRIP=$DEFSTRIP DEF_OPT=$DEFOPT
  cd /
ENDIF

IF <NOCLASSES$CLASSES> EQ CLASSES

  IF <CLEAN$NOCLEAN> EQ NOCLEAN
	IF NOT EXISTS <DIR>/Gadgets
      MAKEDIR <DIR>/Gadgets
    ENDIF
  ENDIF

  echo Compiling Classes/Button
  echo " "
  cd Classes/Button
  smake <CLEAN> <CLEANOBJ> DIR=<DIR> CPU=<CPU> DEF_DEBUG=$DEFDEBUG DEF_STRIP=$DEFSTRIP DEF_OPT=$DEFOPT
  cd //

  echo Compiling Classes/Clock
  echo " "
  cd Classes/Clock
  smake <CLEAN> <CLEANOBJ> DIR=<DIR> CPU=<CPU> DEF_DEBUG=$DEFDEBUG DEF_STRIP=$DEFSTRIP DEF_OPT=$DEFOPT
  cd //

  echo Compiling Classes/Mem
  echo " "
  cd Classes/Mem
  smake <CLEAN> <CLEANOBJ> DIR=<DIR> CPU=<CPU> DEF_DEBUG=$DEFDEBUG DEF_STRIP=$DEFSTRIP DEF_OPT=$DEFOPT
  cd //
ENDIF

